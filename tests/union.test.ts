import { OpType } from "../src/basic";
import { Path } from "../src/path";

test("union", () => {
    const path = new Path("M0 0L100 0L100 100L0 100L0 0Z")
    const p1 = path.clone()
    p1.translate(0, 100)

    const p2 = path.clone()
    p2.translate(90, 50)

    path.op(p1, OpType.Union)
    path.op(p2, OpType.Union)

    expect(path.toSVGString()).toBe("M0 0L100 0L100 50L190 50L190 150L100 150L100 200L0 200L0 100Z")
})

test("union 1", () => {
    // M103 -12L203 -12L203 88L103 88L103 -12Z
    // M141 116L241 116L241 216L141 216L141 116Z
    // M240.9999999999999 87.99999999999989L140.9999999999999 87.99999999999987L140.9999999999999 -12.000000000000128L240.9999999999999 -12.000000000000114L240.9999999999999 87.99999999999989Z
    // M102.99999999999991 11.289321881345188L173.71067811865464 81.99999999999991L102.99999999999993 152.71067811865464L32.28932188134519 81.99999999999993L102.99999999999991 11.289321881345188Z

    const p0 = new Path("M103 -12L203 -12L203 88L103 88L103 -12Z")
    const p1 = new Path("M141 116L241 116L241 216L141 216L141 116Z")
    const p2 = new Path("M240.9999999999999 87.99999999999989L140.9999999999999 87.99999999999987L140.9999999999999 -12.000000000000128L240.9999999999999 -12.000000000000114L240.9999999999999 87.99999999999989Z")
    const p3 = new Path("M102.99999999999991 11.289321881345188L173.71067811865464 81.99999999999991L102.99999999999993 152.71067811865464L32.28932188134519 81.99999999999993L102.99999999999991 11.289321881345188Z")

    // 这里union不会有问题
    // 关键就是grid会不一样
    p0.addPath(p1)
    p0.op(p2, OpType.Union)
    p0.op(p3, OpType.Union)

    const result = new Path("M141 116L241 116L241 216L141 216ZM103 11.289321881345273L103 -12L203 -12L240.9999999999999 -12.000000000000114L240.9999999999999 87.99999999999989L203 88L167.71067811865458 88L102.99999999999993 152.71067811865464L32.28932188134519 81.99999999999993Z")
    expect(p0.equals(result)).toBe(true)
    // console.log(p0.toSVGString())

})
